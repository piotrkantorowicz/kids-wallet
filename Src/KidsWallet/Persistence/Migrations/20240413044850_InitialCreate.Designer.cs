// <auto-generated />
using System;
using KidsWallet.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KidsWallet.Persistence.Migrations
{
    [DbContext(typeof(KidsWalletDbContext))]
    [Migration("20240413044850_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("kids_wallet")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KidsWallet.Persistence.Model.Accounts.KidAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric")
                        .HasColumnName("balance");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("KidWalletId")
                        .HasColumnType("uuid")
                        .HasColumnName("kid_wallet_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("KidWalletId");

                    b.ToTable("kid_accounts", "kids_wallet");
                });

            modelBuilder.Entity("KidsWallet.Persistence.Model.Operations.KidAccountOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("description");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("due_date");

                    b.Property<Guid>("KidAccountId")
                        .HasColumnType("uuid")
                        .HasColumnName("kid_account_id");

                    b.Property<int>("OperationType")
                        .HasColumnType("integer")
                        .HasColumnName("operation_type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("KidAccountId");

                    b.ToTable("kid_account_operations", "kids_wallet");
                });

            modelBuilder.Entity("KidsWallet.Persistence.Model.Wallets.KidWallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("KidId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("kid_wallets", "kids_wallet");
                });

            modelBuilder.Entity("KidsWallet.Persistence.Model.Accounts.KidAccount", b =>
                {
                    b.HasOne("KidsWallet.Persistence.Model.Wallets.KidWallet", "KidWallet")
                        .WithMany("KidAccounts")
                        .HasForeignKey("KidWalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KidWallet");
                });

            modelBuilder.Entity("KidsWallet.Persistence.Model.Operations.KidAccountOperation", b =>
                {
                    b.HasOne("KidsWallet.Persistence.Model.Accounts.KidAccount", "KidAccount")
                        .WithMany("KidAccountOperations")
                        .HasForeignKey("KidAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KidAccount");
                });

            modelBuilder.Entity("KidsWallet.Persistence.Model.Accounts.KidAccount", b =>
                {
                    b.Navigation("KidAccountOperations");
                });

            modelBuilder.Entity("KidsWallet.Persistence.Model.Wallets.KidWallet", b =>
                {
                    b.Navigation("KidAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
